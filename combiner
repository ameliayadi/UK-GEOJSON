const fs = require('fs');
const fetch = require('node-fetch');

// Function to read local GeoJSON file
function readLocalGeoJSON(filePath) {
  return new Promise((resolve, reject) => {
    fs.readFile(filePath, 'utf8', (err, data) => {
      if (err) {
        reject(err);
      } else {
        resolve(JSON.parse(data));
      }
    });
  });
}

// Function to fetch GeoJSON from URL
async function fetchGeoJSON(url) {
  const response = await fetch(url);
  if (!response.ok) {
    throw new Error(`Failed to fetch GeoJSON from ${url}`);
  }
  return response.json();
}

// Function to combine two GeoJSON objects
function combineGeoJSON(geojson1, geojson2) {
  return {
    type: 'FeatureCollection',
    features: [...geojson1.features, ...geojson2.features],
  };
}

// Main function to combine GeoJSON files
async function main() {
  try {
    const localGeoJSONPath = '/Users/ameliaydi/UK-GEOJSON/northern_ireland';
    const remoteGeoJSONUrl = 'https://raw.githubusercontent.com/martinjc/UK-GeoJSON/refs/heads/master/json/electoral/gb/eer.json';

    const localGeoJSON = await readLocalGeoJSON(localGeoJSONPath);
    const remoteGeoJSON = await fetchGeoJSON(remoteGeoJSONUrl);

    const combinedGeoJSON = combineGeoJSON(localGeoJSON, remoteGeoJSON);

    console.log('Combined GeoJSON:', JSON.stringify(combinedGeoJSON, null, 2));
  } catch (error) {
    console.error('Error combining GeoJSON files:', error);
  }
}

main();